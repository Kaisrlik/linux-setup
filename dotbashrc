# create alisases
alias ra='ranger'

export ROS_WORKSPACE=~/ros_workspace

# set editor and shell
export EDITOR=vim
export SHELL=/bin/bash

# the location of `once generated ctags file`
export CTAGS_FILE_ONCE="~/tags-once" 

export TERM="xterm-256color"                                                                          

# allows killing process with all its children
killp () {

  if [ $# -eq 0 ]; then
    pes=$( cat ) 
  else
    pes=$1
  fi
  
	for child in $(ps -o pid,ppid -ax | \
   awk "{ if ( \$2 == $pes ) { print \$1 }}")
  do
    # echo "Killing child process $child because ppid = $pes"
    killp $child
  done
        
  # echo "killing $1"
  kill -9 "$1" > /dev/null 2> /dev/null
}

alias sb="source ~/.bashrc"

# use ctags to generate code tags
generateTags() {

  # generate project's tags
  # TODO check for file existence
  ctagscmd="ctags --fields=+l -f ~/tags $CTAGS_SOURCE_DIR"
  eval $ctagscmd

  # generate `once generated tags`, e.g. ROS's tags
  if [ ! -e $(eval echo "$CTAGS_FILE_ONCE") ]; then
    echo "generating one-time generated tags"
    ctagscmd="ctags --fields=+l -f $CTAGS_FILE_ONCE $CTAGS_ONCE_SOURCE_DIR"
    eval $ctagscmd
  fi 
}

# allows killing tmux by exiting the window                                                           
tmuxn() {

  PES="$BASHPID"

  num=`tmux ls 2> /dev/null | grep "$PES" | wc -l` 
  if [ "$num" -gt "0" ]; then

    ID=`tmux new-window -t $PES -a -P`
    tmux -2 attach-session -t $PES

  else

    tmux new-session -s "$PES" 

  fi 
}
_trap_exit() { tmux kill-session -t $BASHPID; }                                                       
trap _trap_exit EXIT                                                                                  

# VIM alias for running vim in tmux and in servermode
runvim() {
  
  { generateTags & disown; } 2> /dev/null

  # if the tmux session does not exist, create new and run vim in it
  if [ -z $TMUX ]; then
  
    vimcmd="vim --servername dog ${@}"

    PES="$BASHPID"
    # if there is a tmux session with the same name as the current bashpid
    num=`tmux ls 2> /dev/null | grep "$PES" | wc -l`
    if [ "$num" -gt "0" ]; then

      ID=`tmux new-window -t $PES -a -P`
      tmux send-keys -t $ID "$vimcmd" C-m
      tmux -2 attach-session -t $PES
    
    else 

      tmux new-session -s $PES -d $vimcmd \; attach

    fi

  else

    /usr/bin/vim --servername dog ${@}

  fi
}
alias vim=runvim

# exit alias
alias :q=exit

# source tmuxinator
source $GIT_PATH/linux-setup/submodules/tmuxinator/completion/tmuxinator.bash

# set good keyboard repeat speed
xset r rate 200 25

# set vi mode in bash
set -o vi

# load tmux automatically                                                                             
if [ "$RUN_TMUX" = "true" ]; then
  if command -v tmux>/dev/null; then                                                                    
    if [ ! -z "$PS1" ]; then # unless shell not loaded interactively, run tmux                          
      [[ ! $TERM =~ screen ]] && [ -z $TMUX ] && tmuxn                                                  
     fi                                                                                                  
  fi
fi
